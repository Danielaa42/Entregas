<!DOCTYPE html>
<html>
	<head>
		<meta charset=utf-8>
		<title>My first three.js app</title>
		<style>
			body { margin: 0; }
			canvas { width: 100%; height: 100% }
		</style>
	</head>
	<body>
		<script src="js/three.js"></script>
		<script>
			var scene = new THREE.Scene();
			var camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );
			var renderer = new THREE.WebGLRenderer();
			renderer.setSize( window.innerWidth, window.innerHeight );
			document.body.appendChild( renderer.domElement );
			
			var color1 = new THREE.Color( 0xFFFFFF );
			var origin = new THREE.Vector3( 0, 0, 0 );
			var xOrigen = new THREE.Vector3( 1, 0, 0 );
		
			

			var geometry = new THREE.PlaneGeometry( 4, 4 );
			var material = new THREE.MeshBasicMaterial( {color: 0xFFFFFF, side: THREE.DoubleSide} );
			var plane = new THREE.Mesh( geometry, material );
			

			var gridHelperXY = new THREE.GridHelper( 10, 10, color1, color1);	
			gridHelperXY.rotateOnWorldAxis( xOrigen, THREE.Math.degToRad(90) );		
		
	
			var matrixT = new THREE.Matrix4();
			matrixT.set( 1, 0, 0, 2,
						 0, 1, 0, 2,
						 0, 0, 1, 0,
						 0, 0, 0, 1);						 
			plane.applyMatrix(matrixT);
			

			var x = 0, y = 0;
			var myShape = new THREE.Shape();
			myShape.moveTo( x + 1, y + 3);
			myShape.lineTo( x - 1, y + 3);
			myShape.lineTo( x + 0, y + 5);
			var geometry = new THREE.ShapeGeometry( myShape );
			var material = new THREE.MeshBasicMaterial( { color: 0xFFFFFF} );
			var mesh = new THREE.Mesh( geometry, material ) ;
			


			var pGeometry = new THREE.Geometry();
			var pMaterial = new THREE.PointsMaterial( { color: 0xffffff, size:0.5			} );
			pGeometry.vertices.push(
	
				new THREE.Vector3( -3, -3, 0 )
			);			
			var point = new THREE.Points(pGeometry, pMaterial);
			

			var lMaterial = new THREE.LineBasicMaterial({color: 0xffffff});
			var lGeometry = new THREE.Geometry();
			lGeometry.vertices.push(
				new THREE.Vector3(0, 5, 0),
		
				
			);
			var line = new THREE.Line( lGeometry, lMaterial );
			scene.add( line );

	
			var cA = Math.cos(THREE.Math.degToRad(180));
			var sA = Math.sin(THREE.Math.degToRad(180));
			var matrixR = new THREE.Matrix4();
			matrixR.set( cA,-sA, 0, 2,
						 sA, cA, 0, 2,
						 0,   0, 1, 0,
						 0,   0, 0, 1);						 
			plane.applyMatrix(matrixR);
			

				
			scene.add( plane );
			scene.add( mesh );
			scene.add(point);

			camera.translateZ(10);
			camera.lookAt(origin);
			

			renderer.render( scene, camera );				
		</script>
	</body>
</html>